# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.geo_point import GeoPoint  # noqa: F401,E501
from swagger_server.models.source import Source  # noqa: F401,E501
from swagger_server.models.time_frame import TimeFrame  # noqa: F401,E501
from swagger_server import util


class Border(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, positions: List[GeoPoint]=None, duration: TimeFrame=None, source: Source=None):  # noqa: E501
        """Border - a model defined in Swagger

        :param positions: The positions of this Border.  # noqa: E501
        :type positions: List[GeoPoint]
        :param duration: The duration of this Border.  # noqa: E501
        :type duration: TimeFrame
        :param source: The source of this Border.  # noqa: E501
        :type source: Source
        """
        self.swagger_types = {
            'positions': List[GeoPoint],
            'duration': TimeFrame,
            'source': Source
        }

        self.attribute_map = {
            'positions': 'positions',
            'duration': 'duration',
            'source': 'source'
        }
        self._positions = positions
        self._duration = duration
        self._source = source

    @classmethod
    def from_dict(cls, dikt) -> 'Border':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Border of this Border.  # noqa: E501
        :rtype: Border
        """
        return util.deserialize_model(dikt, cls)

    @property
    def positions(self) -> List[GeoPoint]:
        """Gets the positions of this Border.


        :return: The positions of this Border.
        :rtype: List[GeoPoint]
        """
        return self._positions

    @positions.setter
    def positions(self, positions: List[GeoPoint]):
        """Sets the positions of this Border.


        :param positions: The positions of this Border.
        :type positions: List[GeoPoint]
        """
        if positions is None:
            raise ValueError("Invalid value for `positions`, must not be `None`")  # noqa: E501

        self._positions = positions

    @property
    def duration(self) -> TimeFrame:
        """Gets the duration of this Border.


        :return: The duration of this Border.
        :rtype: TimeFrame
        """
        return self._duration

    @duration.setter
    def duration(self, duration: TimeFrame):
        """Sets the duration of this Border.


        :param duration: The duration of this Border.
        :type duration: TimeFrame
        """

        self._duration = duration

    @property
    def source(self) -> Source:
        """Gets the source of this Border.


        :return: The source of this Border.
        :rtype: Source
        """
        return self._source

    @source.setter
    def source(self, source: Source):
        """Sets the source of this Border.


        :param source: The source of this Border.
        :type source: Source
        """

        self._source = source
