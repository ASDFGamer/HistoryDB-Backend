# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class EventRelation(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, type: int=None, event: int=None):  # noqa: E501
        """EventRelation - a model defined in Swagger

        :param type: The type of this EventRelation.  # noqa: E501
        :type type: int
        :param event: The event of this EventRelation.  # noqa: E501
        :type event: int
        """
        self.swagger_types = {
            'type': int,
            'event': int
        }

        self.attribute_map = {
            'type': 'type',
            'event': 'event'
        }
        self._type = type
        self._event = event

    @classmethod
    def from_dict(cls, dikt) -> 'EventRelation':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The EventRelation of this EventRelation.  # noqa: E501
        :rtype: EventRelation
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self) -> int:
        """Gets the type of this EventRelation.


        :return: The type of this EventRelation.
        :rtype: int
        """
        return self._type

    @type.setter
    def type(self, type: int):
        """Sets the type of this EventRelation.


        :param type: The type of this EventRelation.
        :type type: int
        """

        self._type = type

    @property
    def event(self) -> int:
        """Gets the event of this EventRelation.


        :return: The event of this EventRelation.
        :rtype: int
        """
        return self._event

    @event.setter
    def event(self, event: int):
        """Sets the event of this EventRelation.


        :param event: The event of this EventRelation.
        :type event: int
        """

        self._event = event
