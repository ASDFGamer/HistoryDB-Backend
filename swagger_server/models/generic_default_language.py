# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.generic_default_language_translations import GenericDefaultLanguageTranslations  # noqa: F401,E501
from swagger_server.models.language import Language  # noqa: F401,E501
from swagger_server import util


class GenericDefaultLanguage(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, default_language: Language=None, default_name: str=None, translations: List[GenericDefaultLanguageTranslations]=None):  # noqa: E501
        """GenericDefaultLanguage - a model defined in Swagger

        :param default_language: The default_language of this GenericDefaultLanguage.  # noqa: E501
        :type default_language: Language
        :param default_name: The default_name of this GenericDefaultLanguage.  # noqa: E501
        :type default_name: str
        :param translations: The translations of this GenericDefaultLanguage.  # noqa: E501
        :type translations: List[GenericDefaultLanguageTranslations]
        """
        self.swagger_types = {
            'default_language': Language,
            'default_name': str,
            'translations': List[GenericDefaultLanguageTranslations]
        }

        self.attribute_map = {
            'default_language': 'default_language',
            'default_name': 'default_name',
            'translations': 'translations'
        }
        self._default_language = default_language
        self._default_name = default_name
        self._translations = translations

    @classmethod
    def from_dict(cls, dikt) -> 'GenericDefaultLanguage':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The GenericDefaultLanguage of this GenericDefaultLanguage.  # noqa: E501
        :rtype: GenericDefaultLanguage
        """
        return util.deserialize_model(dikt, cls)

    @property
    def default_language(self) -> Language:
        """Gets the default_language of this GenericDefaultLanguage.


        :return: The default_language of this GenericDefaultLanguage.
        :rtype: Language
        """
        return self._default_language

    @default_language.setter
    def default_language(self, default_language: Language):
        """Sets the default_language of this GenericDefaultLanguage.


        :param default_language: The default_language of this GenericDefaultLanguage.
        :type default_language: Language
        """
        if default_language is None:
            raise ValueError("Invalid value for `default_language`, must not be `None`")  # noqa: E501

        self._default_language = default_language

    @property
    def default_name(self) -> str:
        """Gets the default_name of this GenericDefaultLanguage.


        :return: The default_name of this GenericDefaultLanguage.
        :rtype: str
        """
        return self._default_name

    @default_name.setter
    def default_name(self, default_name: str):
        """Sets the default_name of this GenericDefaultLanguage.


        :param default_name: The default_name of this GenericDefaultLanguage.
        :type default_name: str
        """
        if default_name is None:
            raise ValueError("Invalid value for `default_name`, must not be `None`")  # noqa: E501

        self._default_name = default_name

    @property
    def translations(self) -> List[GenericDefaultLanguageTranslations]:
        """Gets the translations of this GenericDefaultLanguage.


        :return: The translations of this GenericDefaultLanguage.
        :rtype: List[GenericDefaultLanguageTranslations]
        """
        return self._translations

    @translations.setter
    def translations(self, translations: List[GenericDefaultLanguageTranslations]):
        """Sets the translations of this GenericDefaultLanguage.


        :param translations: The translations of this GenericDefaultLanguage.
        :type translations: List[GenericDefaultLanguageTranslations]
        """

        self._translations = translations
