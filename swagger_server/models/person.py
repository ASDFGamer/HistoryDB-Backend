# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.generic_default_language import GenericDefaultLanguage  # noqa: F401,E501
from swagger_server.models.source import Source  # noqa: F401,E501
from swagger_server.models.time_frame import TimeFrame  # noqa: F401,E501
from swagger_server.models.title import Title  # noqa: F401,E501
from swagger_server import util


class Person(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, title: Title=None, name: GenericDefaultLanguage=None, lifetime: TimeFrame=None, source: Source=None):  # noqa: E501
        """Person - a model defined in Swagger

        :param title: The title of this Person.  # noqa: E501
        :type title: Title
        :param name: The name of this Person.  # noqa: E501
        :type name: GenericDefaultLanguage
        :param lifetime: The lifetime of this Person.  # noqa: E501
        :type lifetime: TimeFrame
        :param source: The source of this Person.  # noqa: E501
        :type source: Source
        """
        self.swagger_types = {
            'title': Title,
            'name': GenericDefaultLanguage,
            'lifetime': TimeFrame,
            'source': Source
        }

        self.attribute_map = {
            'title': 'title',
            'name': 'name',
            'lifetime': 'lifetime',
            'source': 'source'
        }
        self._title = title
        self._name = name
        self._lifetime = lifetime
        self._source = source

    @classmethod
    def from_dict(cls, dikt) -> 'Person':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Person of this Person.  # noqa: E501
        :rtype: Person
        """
        return util.deserialize_model(dikt, cls)

    @property
    def title(self) -> Title:
        """Gets the title of this Person.


        :return: The title of this Person.
        :rtype: Title
        """
        return self._title

    @title.setter
    def title(self, title: Title):
        """Sets the title of this Person.


        :param title: The title of this Person.
        :type title: Title
        """

        self._title = title

    @property
    def name(self) -> GenericDefaultLanguage:
        """Gets the name of this Person.


        :return: The name of this Person.
        :rtype: GenericDefaultLanguage
        """
        return self._name

    @name.setter
    def name(self, name: GenericDefaultLanguage):
        """Sets the name of this Person.


        :param name: The name of this Person.
        :type name: GenericDefaultLanguage
        """

        self._name = name

    @property
    def lifetime(self) -> TimeFrame:
        """Gets the lifetime of this Person.


        :return: The lifetime of this Person.
        :rtype: TimeFrame
        """
        return self._lifetime

    @lifetime.setter
    def lifetime(self, lifetime: TimeFrame):
        """Sets the lifetime of this Person.


        :param lifetime: The lifetime of this Person.
        :type lifetime: TimeFrame
        """

        self._lifetime = lifetime

    @property
    def source(self) -> Source:
        """Gets the source of this Person.


        :return: The source of this Person.
        :rtype: Source
        """
        return self._source

    @source.setter
    def source(self, source: Source):
        """Sets the source of this Person.


        :param source: The source of this Person.
        :type source: Source
        """

        self._source = source
